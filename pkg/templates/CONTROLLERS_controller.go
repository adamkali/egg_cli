package templates

const CONTROLLER_ControllerTemplate = `
/* Generated by egg v0.0.1 */

package controllers

import (
	"context"

	"{{.Namespace}}/cmd/configuration"
	"{{.Namespace}}/middlwares/configs"
	"{{.Namespace}}/services"
	"github.com/jackc/pgx/v5/pgxpool"
	"github.com/labstack/echo/v4"
	echojwt "github.com/labstack/echo-jwt/v4"
)

type Registrar struct {
	Config           *configuration.Configuration
	ValidatorService *services.ValidatorService
	UserService      services.IUserService
	AuthService      services.IAuthService
	MinioService     services.IMinioService
	RedisService     services.IRedisService
}

type IController interface {
	Attatch(e *echo.Echo, authMiddleware echo.MiddlewareFunc)
}

func createControllerParams(config *configuration.Configuration) (*Registrar, error) {
	ctx := context.Background()
	db, err := pgxpool.New(ctx, config.Database.URL)
	if err != nil {
		return nil, err
	}

	return &Registrar{
		Config:           config,
		ValidatorService: &services.ValidatorService{},
		AuthService:      services.CreateAuthService(ctx, db, config),
		UserService:      services.CreateUserService(ctx, db),
		MinioService:     services.CreateMinioService(ctx, config),
		RedisService:     services.CreateRedisService(ctx, config),
	}, nil
}

func AttatchControllers(e *echo.Echo, config *configuration.Configuration, conts ...IController) {
	// configure middlewares here right now it is just an authentication
	for _, v := range conts {
		v.Attatch(e, echojwt.WithConfig(configs.AuthMiddlewareConfig(config)))
	}
}
`
