package templates_test

import (
	"bytes"
	"testing"
	"text/template"

	"github.com/adamkali/egg_cli/pkg/templates"
)

const ResultSERVICES_IMinioServiceTemplate = `
/* Generated by egg v0.0.1 */

package services

import (
	"io"

	"github.com/google/uuid"
)

type IMinioService interface {
	Upload(uploaderID uuid.UUID, uploadName string, uploadFile io.Reader, size int64) error
	Get(uploaderID uuid.UUID, uploadName string) ([]byte, error)
	GetPresigned(uploaderID uuid.UUID, uploadName string) (string, error)
}
`

func TestSERVICES_IMinioServiceTemplate(t *testing.T) {
	// load the template
	temp := templates.SERVICES_IMinioServiceTemplate
	templateTest := template.Must(template.New("i_minio_service.go").Parse(temp))

	// execute the template
	stringWriter := new(bytes.Buffer)
	err := templateTest.ExecuteTemplate(stringWriter, "i_minio_service.go", createConfiguration())
	if err != nil {
		t.Error(err)
	}

	// check the result
	if stringWriter.String() != ResultSERVICES_IMinioServiceTemplate {
		diff := Diff(stringWriter.String(), ResultSERVICES_IMinioServiceTemplate)
		for i, v := range diff {
			t.Errorf("line %d: expected %s, got %s", i, v.Expected, v.Actual)
		}
	}
}
