package templates_test

import (
	"bytes"
	"testing"
	"text/template"

	"github.com/adamkali/egg_cli/pkg/templates"
)

const ResultSERVICES_IAuthServiceTemplate = `
/* Generated by egg v0.0.1 */

package services

import (
	"github.com/adamkali/egg/internal/repository"
)


type IAuthService interface {
	Create(user *repository.User) (*string, error)
 	Update(user repository.User) (*string, error)
	CheckToken(token string) error
}
`

func TestSERVICES_IAuthServiceTemplate(t *testing.T) {
	// load the template
	temp := templates.SERVICES_IAuthServiceTemplate
	templateTest := template.Must(template.New("i_auth_service.go").Parse(temp))

	// execute the template
	stringWriter := new(bytes.Buffer)
	err := templateTest.ExecuteTemplate(stringWriter, "i_auth_service.go", createConfiguration())
	if err != nil {
		t.Error(err)
	}

	// check the result
	if stringWriter.String() != ResultSERVICES_IAuthServiceTemplate {
		diff := Diff(stringWriter.String(), ResultSERVICES_IAuthServiceTemplate)
		for i, v := range diff {
			t.Errorf("line %d: expected %s, got %s", i, v.Expected, v.Actual)
		}
	}
}
