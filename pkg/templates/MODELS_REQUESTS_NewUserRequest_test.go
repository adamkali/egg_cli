package templates_test

import (
	"bytes"
	"testing"
	"text/template"

	"github.com/adamkali/egg_cli/pkg/templates"
)

const ResultMODELS_REQUESTS_NewUserRequestTemplate = `
/* Generated by egg v0.0.1 */

package requests

type NewUserRequest struct {
	Username string ` + "`" + `json:"username"` + "`" + `
	Email    string ` + "`" + `json:"email"` + "`" + `
	Password string ` + "`" + `json:"password"` + "`" + `
	IsAdmin  bool   ` + "`" + `json:"isAdmin"` + "`" + `
} // @name NewUserRequest

`

func TestMODELS_REQUESTS_NewUserRequestTemplate(t *testing.T) {
	// load the template
	temp := templates.MODELS_REQUESTS_NewUserRequestTemplate
	templateTest := template.Must(template.New("new_user_request.go").Parse(temp))

	// execute the template
	stringWriter := new(bytes.Buffer)
	err := templateTest.ExecuteTemplate(stringWriter, "new_user_request.go", createConfiguration())
	if err != nil {
		t.Error(err)
	}

	// check the result
	if stringWriter.String() != ResultMODELS_REQUESTS_NewUserRequestTemplate {
		diff := Diff(stringWriter.String(), ResultMODELS_REQUESTS_NewUserRequestTemplate)
		for i, v := range diff {
			t.Errorf("line %d: expected %s, got %s", i, v.Expected, v.Actual)
		}
	}
}
