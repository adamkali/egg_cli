package templates_test

import (
	"bytes"
	"testing"
	"text/template"

	"github.com/adamkali/egg_cli/pkg/templates"
)

const ResultSERVICES_IRedisServiceTemplate = `
/* Generated by egg v0.0.1 */

package services

import "time"

type IRedisService interface {
	SetWithExpiration(key string, value string, expiration time.Duration) error
	GetWithExpiration(key string, expiration time.Duration) (string, error)
	Set(key string, value string) error
	Get(key string) (string, error)
	Delete(key string) error
}
`

func TestSERVICES_IRedisServiceTemplate(t *testing.T) {
	// load the template
	temp := templates.SERVICES_IRedisServiceTemplate
	templateTest := template.Must(template.New("i_redis_service.go").Parse(temp))

	// execute the template
	stringWriter := new(bytes.Buffer)
	err := templateTest.ExecuteTemplate(stringWriter, "i_redis_service.go", createConfiguration())
	if err != nil {
		t.Error(err)
	}

	// check the result
	if stringWriter.String() != ResultSERVICES_IRedisServiceTemplate {
		diff := Diff(stringWriter.String(), ResultSERVICES_IRedisServiceTemplate)
		for i, v := range diff {
			t.Errorf("line %d: expected %s, got %s", i, v.Expected, v.Actual)
		}
	}
}
