package templates_test

import (
	"bytes"
	"testing"
	"text/template"

	"github.com/adamkali/egg_cli/pkg/templates"
)

const ResultDATABASE_QUERIES_UserTemplate = `
-- Generated by egg v0.0.1

-- name: FindUserByID :one
SELECT * FROM users WHERE id = $1;

-- name: FindUserByUsername :one
SELECT *
    FROM users 
    WHERE username = $1;

-- name: FindUserByEmail :one
SELECT *
    FROM users 
    WHERE email = $1;

-- name: FindBCryptHashByUsername :one
SELECT b_crypt_hash
    FROM users
    Where username = $1;

-- name: FindBCryptHashByEmail :one
SELECT b_crypt_hash
    FROM users
    Where email = $1;

-- name: FindUsers :many
SELECT * FROM users;

-- name: CreateUser :one
INSERT INTO users (
  email, username, created_datetime, updated_datetime, profile_pic_url, admin, b_crypt_hash 
) VALUES ($1, $2, now(), now(), NULL, false, $3)
RETURNING *;

-- name: CreateUserAdmin :one
INSERT INTO users (
  email, username, created_datetime, updated_datetime, profile_pic_url, admin, b_crypt_hash
) VALUES ($1, $2, now(), now(), NULL, true, $3)
RETURNING *;

-- name: DeleteUserByID :exec
DELETE FROM users WHERE id = $1;

-- name: UpdateUserProfile :exec
UPDATE users
SET profile_pic_url = $1
WHERE id = $2;
`

func TestDATABASE_QUERIES_UserTemplate(t *testing.T) {
	temp := templates.DATABASE_QUERIES_UserTemplate
	templateTest := template.Must(template.New("user_queries.sql").Parse(temp))

	stringWriter := new(bytes.Buffer)
	err := templateTest.ExecuteTemplate(stringWriter, "user_queries.sql", createConfiguration())
	if err != nil {
		t.Error(err)
	}

	if stringWriter.String() != ResultDATABASE_QUERIES_UserTemplate {
		diff := Diff(stringWriter.String(), ResultDATABASE_QUERIES_UserTemplate)
		for i, v := range diff {
			t.Errorf("line %d: expected %s, got %s", i, v.Expected, v.Actual)
		}
	}
}
