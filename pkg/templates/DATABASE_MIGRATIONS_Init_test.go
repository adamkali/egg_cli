package templates_test

import (
	"bytes"
	"testing"
	"text/template"

	"github.com/adamkali/egg_cli/pkg/templates"
)

const ResultDATABASE_MIGRATIONS_INITTemplate = `
/* Generated by egg v0.0.1 */

-- +goose Up
-- +goose StatementBegin
CREATE TABLE users (
  id UUID PRIMARY KEY NOT NULL DEFAULT gen_random_uuid(),
  email VARCHAR NOT NULL UNIQUE,
  username VARCHAR NOT NULL UNIQUE,
  created_datetime TIMESTAMP NOT NULL,
  updated_datetime TIMESTAMP NOT NULL,
  profile_pic_url VARCHAR(255),
  b_crypt_hash VARCHAR NOT NULL,
  admin BOOLEAN NOT NULL DEFAULT false
);
CREATE TABLE tokens (
  id UUID PRIMARY KEY NOT NULL DEFAULT gen_random_uuid(),
  user_id UUID NOT NULL REFERENCES users(id),
  expiration_datetime TIMESTAMP NOT NULL,
  token text NOT NULL
);
-- +goose StatementEnd

-- +goose Down
-- +goose StatementBegin
DROP TABLE tokens;
DROP TABLE users;
-- +goose StatementEnd
`

func TestDATABASE_MIGRATIONS_INITTemplate(t *testing.T) {
	temp := templates.DATABASE_MIGRATIONS_INITTemplate
	templateTest := template.Must(template.New("init_migration.sql").Parse(temp))

	stringWriter := new(bytes.Buffer)
	err := templateTest.ExecuteTemplate(stringWriter, "init_migration.sql", createConfiguration())
	if err != nil {
		t.Error(err)
	}

	if stringWriter.String() != ResultDATABASE_MIGRATIONS_INITTemplate {
		diff := Diff(stringWriter.String(), ResultDATABASE_MIGRATIONS_INITTemplate)
		for i, v := range diff {
			t.Errorf("line %d: expected %s, got %s", i, v.Expected, v.Actual)
		}
	}
}
